<div class="container-fluid">
  <div class="content-wrapper">	
		<div class="item-container">	
			<div class="container">	
			<hr>
				<div class="col-md-12">
					<div class="product col-md-3 service-image-left">  
          <center>        
						<% if @product.default_image %>
  	          <%= image_tag @product.default_image.path, :style => "max-width:100%;height:100%;" %>
	          <% else %>
	            <%= image_tag "http://placehold.it/400x400" %>
	          <% end %>
          </center>
					</div>
					
					<div class="container service1-items col-md-4 col-sm-6 col-xs-12 pull-left color_picker_container">         
              <% for i in 0..@background_details.length-1 %> 
                <% background = @background_details[i] %>
                <% html = select_background_type(background[0], background[1]) %>
                
                <div style='<%= html[0] %>' class="color_picker_primary" name="<%= @colors_array.uniq[i] %>">
                    <div style='<%= html[1] %>' class="color_picker_optional" name="<%= @colors_array.uniq[i] %>">
                    </div> 
                </div>
              <% end %> 
					</div>
<%= form_tag product_path(@product.permalink, :size => @size, :color => @color), :method => :post do %>
					<!-- MAIN SETTINGS AND ATTRIBUTES -->
					<div class="col-md-5 col-sm-6">
           	<!-- TITLE -->
						<div class="product-title"><%= @product.name.split("-").first %></div>
						<div class="product-desc"><%= @product.description %></div>					   
          <hr>
            <!-- COLORS -->
            <h3>Select Color:</h3>
						<div class="selectpicker" data-show-subtext="true" id="color_selector">

            <%= select_tag :color, options_for_select(@colors_array.uniq, :selected => params[:color]) %>
            </div>

            <!-- SIZE -->
						<h3>Select Size: </h3>
						<div class="selectpicker " data-show-subtext="true" id="size_selector">
               <%= select_tag :size, options_for_select(@sizes, :selected => params[:size]) %>
            </div>
    			<hr>
						<div class="product-price"><%= number_to_currency @product.price %></div>
						<div class="product-stock">
								In Stock
						</div>

    					<hr>

              <p>
                <%= submit_tag 'Add to basket', class: "ui button green" %>
              </p>
              <hr>
            <% end %>
						<div class="btn-group wishlist">
							<%= link_to "Back to List", root_path, class: "ui button red", :style => 'float:right' %>
						</div>
					</div>
				</div> 
			</div>
	<div class="row">
    <%= render 'products' %>
  </div>
</div>

<script>
        var old_selection = document.body
        $(function() {            
            $('.color_picker_primary').on('click', function() {
                console.log(old_selection)

                //set the selector the name of this color square
                $('#color_selector')[0].value = this.attributes[2].value

                //give a border to emulate selection
                $(this).css('border', '2px solid yellow')

                // reset the former square
                old_selection.style.border = 'none',       
                old_selection = this
            })

            $('#color_selector').on('change', function() { 
                // cycle through all the possible colors_array
                console.log(this)
                console.log(this.value)
                colors_box = $('.color_picker_primary')
                for (var i = 0; i < colors_box.length; i++) {
                     name = colors_box[i].attributes[2].value 
                     selector_value = $('#color_selector')[0].value
                     name == this.value? colors_box[i].style.border = '2px solid yellow' : null 

                    // old_selection.style.border = 'none',       
                    // old_selection = colors_box[i]
                 }; 
            })
        })
</script>

<script>
	$(document).ready(function(){

    loadGallery(true, 'a.thumbnail');

    //This function disables buttons when needed
    function disableButtons(counter_max, counter_current){
        $('#show-previous-image, #show-next-image').show();
        if(counter_max == counter_current){
            $('#show-next-image').hide();
        } else if (counter_current == 1){
            $('#show-previous-image').hide();
        }
    }

    /**
     *
     * @param setIDs        Sets IDs when DOM is loaded. If using a PHP counter, set to false.
     * @param setClickAttr  Sets the attribute for the click handler.
     */

    function loadGallery(setIDs, setClickAttr){
        var current_image,
            selector,
            counter = 0;

        $('#show-next-image, #show-previous-image').click(function(){
            if($(this).attr('id') == 'show-previous-image'){
                current_image--;
            } else {
                current_image++;
            }

            selector = $('[data-image-id="' + current_image + '"]');
            updateGallery(selector);
        });

        function updateGallery(selector) {
            var $sel = selector;
            current_image = $sel.data('image-id');
            $('#image-gallery-caption').text($sel.data('caption'));
            $('#image-gallery-title').text($sel.data('title'));
            $('#image-gallery-image').attr('src', $sel.data('image'));
            disableButtons(counter, $sel.data('image-id'));
        }

        if(setIDs == true){
            $('[data-image-id]').each(function(){
                counter++;
                $(this).attr('data-image-id',counter);
            });
        }
        $(setClickAttr).on('click',function(){
            updateGallery($(this));
        });
    }
});
   
</script>